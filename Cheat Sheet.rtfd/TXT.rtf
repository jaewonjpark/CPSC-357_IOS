{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 TimesNewRomanPSMT;\f2\ftech\fcharset77 Symbol;
\f3\fmodern\fcharset0 CourierNewPSMT;\f4\froman\fcharset0 TimesNewRomanPS-BoldMT;\f5\fswiss\fcharset0 Helvetica-Bold;
\f6\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red68\green114\blue196;}
{\*\expandedcolortbl;;\csgenericrgb\c26667\c44706\c76863;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid102\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid202\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid302\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid402\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid502\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid602\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid603\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid702\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid703\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid802\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid902\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1002\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1102\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid12}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}}
\margl1440\margr1440\vieww11880\viewh8400\viewkind0
\deftab741
\pard\pardeftab741\ri0\qc\partightenfactor0

\f0\fs24 \cf0 CPSC 357 \'96 iOS Cheat Sheet\
Jaewon Park\
\pard\pardeftab741\ri0\partightenfactor0

\f1 \cf0 \

\f0 Strings\
\pard\pardeftab741\li720\fi-360\ri0\partightenfactor0
\ls1\ilvl0
\f2 \cf0 \'a5	
\f0 Strings in Swift are fully Unicode-compliant so different languages can be used\
\ls1\ilvl0
\f2 \'a5	
\f0 String Interpolation\
\pard\pardeftab741\li1440\fi-360\ri0\partightenfactor0
\ls1\ilvl1
\f3 \cf0 o	
\f0 Ex) let firstName = "Tim"
\f1 \
\pard\pardeftab741\li1440\ri0\partightenfactor0

\f0 \cf0 let city = "Cupertino"
\f1 \

\f0 let welcomeString = "Hello 
\f4\b \\
\f5 (firstName)
\f0\b0 , welcome to 
\f4\b \\
\f5 (city)"
\f4 \
\pard\pardeftab741\li720\fi-360\ri0\partightenfactor0
\ls2\ilvl1
\f2\b0 \cf0 \'a5	
\f0 What if the string contains quotation marks?\
\pard\pardeftab741\li1440\fi-360\ri0\partightenfactor0
\ls2\ilvl1
\f3 \cf0 o	
\f0 Ex) let badString = "He said, "Hi there!" as he passed by." 
\f5\b (WRONG)
\f1\b0 \
\ls2\ilvl1
\f3 o	
\f0 let stringWithQuotationMarks = "He said, \\"Hi there!\\" as he passed by." 
\f5\b (CORRECT)
\f1\b0 \
\pard\pardeftab741\ri0\partightenfactor0
\cf0 \

\f0 Function\
\pard\pardeftab741\li720\fi-360\ri0\partightenfactor0
\ls3\ilvl1
\f2 \cf0 \'a5	
\f0 func functionName (parameters) -> ReturnType \{// body of the function \}\
\pard\pardeftab741\ri0\partightenfactor0

\f1 \cf0 \

\f0 Class\
\pard\pardeftab741\li720\fi-360\ri0\partightenfactor0
\ls4\ilvl1
\f2 \cf0 \'a5	
\f0 Class instance are 
\f5\b reference
\f0\b0  type\
\ls4\ilvl1
\f2 \'a5	
\f0 Reference type instances means that each instance shares data, so, if you change one instance, the other instance will also change.
\f1 \
\pard\pardeftab741\ri0\partightenfactor0
\cf0 \

\f0 Struct\
\pard\pardeftab741\li720\fi-360\ri0\partightenfactor0
\ls5\ilvl1
\f2 \cf0 \'a5	
\f0 Structure:  provide a way to encapsulate data and functionality into re-usable instances\
\ls5\ilvl1
\f2 \'a5	
\f0 Structure instance are 
\f5\b value
\f0\b0  type
\f1 \
\ls5\ilvl1
\f2 \'a5	
\f0 Value type instances means you\'92re copying the instance, so, if you change one instance, the other instance will remain unchanged.\
\pard\pardeftab741\li720\ri0\partightenfactor0

\fs21 \cf0 \'93struct Shirt \{\
  var size: Size\
  var color: Color
\f1 \}\

\f0  // Defines the attributes of a shirt. \
\'a0\
let myShirt = Shirt(size: .xl, color: .blue)\
 // Creates an instance of an individual shirt.\
let yourShirt = Shirt(size: .m, color: .red)\
 // Creates a separate instance of an individual shirt. \'94\
\pard\pardeftab741\li720\fi-360\ri0\partightenfactor0
\ls6\ilvl1
\f2\fs24 \cf0 \'a5	
\f0 Enumerations\
\pard\pardeftab741\li1440\fi-360\ri0\partightenfactor0
\ls6\ilvl1
\f3 \cf0 o	
\f0 The Size and Color types define a group of available options, called an enumeration\
\pard\pardeftab741\ri0\partightenfactor0
\cf0 Control Flow\
\pard\pardeftab741\li720\fi-360\ri0\partightenfactor0
\ls7\ilvl1
\f2 \cf0 \'a5	
\f0 for \cf2 constant name \cf0 in \cf2 collection or range 
\f1 \cf0 \{
\f0 // code to be executed\}
\f1 \
\pard\pardeftab741\li1440\fi-360\ri0\partightenfactor0
\ls7\ilvl1
\f3 \cf2 o	
\f0 Constant name \cf0 <- the name to be used for a constant that will contain the current item from the collection or range through which the loop is iterating
\f1 \
\ls7\ilvl1
\f3 \cf2 o	
\f0 collection or range \cf0 <- the item through which the loop is iterating.
\f1 \
\pard\pardeftab741\li1440\fi-360\ri0\partightenfactor0
\ls7\ilvl1
\f3 \cf0 o	
\f0 The constant name is not mandatory it can be change for \'91_\'92 \
\pard\pardeftab741\li2160\fi-360\ri0\partightenfactor0
\ls7\ilvl2
\f6 \cf0 - 
\f0 for _in 1...5 \{print(\'93Hello")\}
\f1 \
\pard\pardeftab741\ri0\partightenfactor0
\cf0 \

\f0 Guard\
\pard\pardeftab741\li720\fi-360\ri0\partightenfactor0
\ls8\ilvl2
\f2 \cf0 \'a5	
\f0 It is similar to the
\f5\b  if statement
\f0\b0  with one major difference
\f1 \
\pard\pardeftab741\li1440\fi-360\ri0\partightenfactor0
\ls8\ilvl1
\f3 \cf0 o	
\f0 The if statement runs when a certain condition is met. 
\f1 \
\ls8\ilvl1
\f3 o	
\f0 The guard statement runs when a certain condition is not met.
\f1 \
\pard\pardeftab741\li1440\ri0\partightenfactor0
\cf0 \
\pard\pardeftab741\ri0\partightenfactor0

\f0 \cf0 Ternary Conditional Operator\
\pard\pardeftab741\li720\fi-360\ri0\partightenfactor0
\ls9\ilvl1
\f2 \cf0 \'a5	
\f0 This is the if-statement				This is using ternary\
\pard\pardeftab741\li1440\ri0\partightenfactor0
\cf0 var largest: Int\
let a = 15\
let b = 4					var largest: Int\
\pard\pardeftab741\ri0\partightenfactor0
\cf0 								let a = 15\
								let b = 4\
		if a > b \{ largest = a\} \
\pard\pardeftab741\li1440\ri0\partightenfactor0
\cf0 else \{largest = b\}				largest = a > b ? a : b\
\pard\pardeftab741\ri0\partightenfactor0
\cf0 \
							\'93If a > b, assign a to the largest 								variable; otherwise, assign b.\'94 In this 							case, a is greater than b, so its value is 							assigned to largest.\'94\'a0
\f1 \
\

\f0 For loop\
\pard\pardeftab741\li720\fi-360\ri0\partightenfactor0
\ls10\ilvl1
\f2 \cf0 \'a5	
\f0 Tuple\
\ls10\ilvl1
\f2 \'a5	
\f0 What if you need the index of each element in addition to its value? You can use the enumerated() method of an array or string to return a tuple\'97a special type that can hold an ordered list of values wrapped in parentheses\'97containing both the index and the value of each item:\
\pard\pardeftab741\li1440\ri0\partightenfactor0

\fs21 \cf0 for (index, letter) in \'93ABCD\'94.enumerated() \{\
  print(\'94\\(index): \\(letter)\'94)\}\
Console Output:\
0: A\
1: B\
2: C\
3: D
\f1 \
\pard\pardeftab741\ri0\partightenfactor0

\f0\fs24 \cf0 Arrays\
\pard\pardeftab741\li720\fi-360\ri0\partightenfactor0
\ls11\ilvl1
\f2 \cf0 \'a5	
\f0 Stores an ordered list of same-typed values.\
\pard\pardeftab741\li720\ri0\partightenfactor0

\f1 \cf0 \
\pard\pardeftab741\ri0\partightenfactor0

\f0 \cf0 Dictionaries\
\pard\pardeftab741\li720\fi-360\ri0\partightenfactor0
\ls12\ilvl1
\f2 \cf0 \'a5	
\f0 This can be represented as either [String: Int] or Dictionary<String, Int>:\
\pard\pardeftab741\ri0\partightenfactor0

\f1 \cf0 \'a0	
\f0 var scores = [\'94Richard\'94: 500, \'93Luke\'94: 400, \'93Cheryl\'94: 800]\
\
\
\
\
\
\
}